// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dilikeo.web;

import com.dilikeo.domain.LlegadaMercancia;
import com.dilikeo.service.api.LlegadaMercanciaService;
import com.dilikeo.web.LlegadaMercanciaDeserializer;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonNode;
import io.springlets.web.NotFoundException;
import java.io.IOException;
import org.springframework.boot.jackson.JsonComponent;
import org.springframework.core.convert.ConversionService;

privileged aspect LlegadaMercanciaDeserializer_Roo_EntityDeserializer {
    
    declare @type: LlegadaMercanciaDeserializer: @JsonComponent;
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return LlegadaMercanciaService
     */
    public LlegadaMercanciaService LlegadaMercanciaDeserializer.getLlegadaMercanciaService() {
        return llegadaMercanciaService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param llegadaMercanciaService
     */
    public void LlegadaMercanciaDeserializer.setLlegadaMercanciaService(LlegadaMercanciaService llegadaMercanciaService) {
        this.llegadaMercanciaService = llegadaMercanciaService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return ConversionService
     */
    public ConversionService LlegadaMercanciaDeserializer.getConversionService() {
        return conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param conversionService
     */
    public void LlegadaMercanciaDeserializer.setConversionService(ConversionService conversionService) {
        this.conversionService = conversionService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param jsonParser
     * @param context
     * @param codec
     * @param tree
     * @return LlegadaMercancia
     * @throws IOException
     */
    public LlegadaMercancia LlegadaMercanciaDeserializer.deserializeObject(JsonParser jsonParser, DeserializationContext context, ObjectCodec codec, JsonNode tree) throws IOException {
        String idText = tree.asText();
        Long id = conversionService.convert(idText, Long.class);
        LlegadaMercancia llegadaMercancia = llegadaMercanciaService.findOne(id);
        if (llegadaMercancia == null) {
            throw new NotFoundException("LlegadaMercancia not found");
        }
        return llegadaMercancia;
    }
    
}
