// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dilikeo.web;

import com.dilikeo.domain.DatosDomiciliario;
import com.dilikeo.service.api.DatosDomiciliarioService;
import com.dilikeo.web.DatosDomiciliariosItemJsonController;
import io.springlets.web.NotFoundException;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder;
import org.springframework.web.util.UriComponents;

privileged aspect DatosDomiciliariosItemJsonController_Roo_JSON {
    
    declare @type: DatosDomiciliariosItemJsonController: @RestController;
    
    declare @type: DatosDomiciliariosItemJsonController: @RequestMapping(value = "/api/datosdomiciliarios/{datosDomiciliario}", name = "DatosDomiciliariosItemJsonController", produces = MediaType.APPLICATION_JSON_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DatosDomiciliarioService DatosDomiciliariosItemJsonController.datosDomiciliarioService;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param datosDomiciliarioService
     */
    @Autowired
    public DatosDomiciliariosItemJsonController.new(DatosDomiciliarioService datosDomiciliarioService) {
        this.datosDomiciliarioService = datosDomiciliarioService;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DatosDomiciliarioService
     */
    public DatosDomiciliarioService DatosDomiciliariosItemJsonController.getDatosDomiciliarioService() {
        return datosDomiciliarioService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosDomiciliarioService
     */
    public void DatosDomiciliariosItemJsonController.setDatosDomiciliarioService(DatosDomiciliarioService datosDomiciliarioService) {
        this.datosDomiciliarioService = datosDomiciliarioService;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DatosDomiciliario
     */
    @ModelAttribute
    public DatosDomiciliario DatosDomiciliariosItemJsonController.getDatosDomiciliario(@PathVariable("datosDomiciliario") Long id) {
        DatosDomiciliario datosDomiciliario = datosDomiciliarioService.findOne(id);
        if (datosDomiciliario == null) {
            throw new NotFoundException(String.format("DatosDomiciliario with identifier '%s' not found",id));
        }
        return datosDomiciliario;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosDomiciliario
     * @return ResponseEntity
     */
    @GetMapping(name = "show")
    public ResponseEntity<?> DatosDomiciliariosItemJsonController.show(@ModelAttribute DatosDomiciliario datosDomiciliario) {
        return ResponseEntity.ok(datosDomiciliario);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosDomiciliario
     * @return UriComponents
     */
    public static UriComponents DatosDomiciliariosItemJsonController.showURI(DatosDomiciliario datosDomiciliario) {
        return MvcUriComponentsBuilder
            .fromMethodCall(
                MvcUriComponentsBuilder.on(DatosDomiciliariosItemJsonController.class).show(datosDomiciliario))
            .buildAndExpand(datosDomiciliario.getId()).encode();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param storedDatosDomiciliario
     * @param datosDomiciliario
     * @param result
     * @return ResponseEntity
     */
    @PutMapping(name = "update")
    public ResponseEntity<?> DatosDomiciliariosItemJsonController.update(@ModelAttribute DatosDomiciliario storedDatosDomiciliario, @Valid @RequestBody DatosDomiciliario datosDomiciliario, BindingResult result) {
        
        if (result.hasErrors()) {
            return ResponseEntity.status(HttpStatus.CONFLICT).body(result);
        }
        datosDomiciliario.setId(storedDatosDomiciliario.getId());
        getDatosDomiciliarioService().save(datosDomiciliario);
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosDomiciliario
     * @return ResponseEntity
     */
    @DeleteMapping(name = "delete")
    public ResponseEntity<?> DatosDomiciliariosItemJsonController.delete(@ModelAttribute DatosDomiciliario datosDomiciliario) {
        getDatosDomiciliarioService().delete(datosDomiciliario);
        return ResponseEntity.ok().build();
    }
    
}
