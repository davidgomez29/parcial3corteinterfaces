// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dilikeo.service.impl;

import com.dilikeo.domain.DatosVendedor;
import com.dilikeo.repository.DatosVendedorRepository;
import com.dilikeo.service.impl.DatosVendedorServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect DatosVendedorServiceImpl_Roo_Service_Impl {
    
    declare @type: DatosVendedorServiceImpl: @Service;
    
    declare @type: DatosVendedorServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private DatosVendedorRepository DatosVendedorServiceImpl.datosVendedorRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param datosVendedorRepository
     */
    @Autowired
    public DatosVendedorServiceImpl.new(DatosVendedorRepository datosVendedorRepository) {
        setDatosVendedorRepository(datosVendedorRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return DatosVendedorRepository
     */
    public DatosVendedorRepository DatosVendedorServiceImpl.getDatosVendedorRepository() {
        return datosVendedorRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosVendedorRepository
     */
    public void DatosVendedorServiceImpl.setDatosVendedorRepository(DatosVendedorRepository datosVendedorRepository) {
        this.datosVendedorRepository = datosVendedorRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosvendedor
     * @return Map
     */
    public Map<String, List<MessageI18n>> DatosVendedorServiceImpl.validate(DatosVendedor datosvendedor) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param datosVendedor
     */
    @Transactional
    public void DatosVendedorServiceImpl.delete(DatosVendedor datosVendedor) {
        getDatosVendedorRepository().delete(datosVendedor);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<DatosVendedor> DatosVendedorServiceImpl.save(Iterable<DatosVendedor> entities) {
        return getDatosVendedorRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void DatosVendedorServiceImpl.delete(Iterable<Long> ids) {
        List<DatosVendedor> toDelete = getDatosVendedorRepository().findAll(ids);
        getDatosVendedorRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return DatosVendedor
     */
    @Transactional
    public DatosVendedor DatosVendedorServiceImpl.save(DatosVendedor entity) {
        return getDatosVendedorRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DatosVendedor
     */
    public DatosVendedor DatosVendedorServiceImpl.findOne(Long id) {
        return getDatosVendedorRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return DatosVendedor
     */
    public DatosVendedor DatosVendedorServiceImpl.findOneForUpdate(Long id) {
        return getDatosVendedorRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<DatosVendedor> DatosVendedorServiceImpl.findAll(Iterable<Long> ids) {
        return getDatosVendedorRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<DatosVendedor> DatosVendedorServiceImpl.findAll() {
        return getDatosVendedorRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long DatosVendedorServiceImpl.count() {
        return getDatosVendedorRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DatosVendedor> DatosVendedorServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getDatosVendedorRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<DatosVendedor> DatosVendedorServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getDatosVendedorRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<DatosVendedor> DatosVendedorServiceImpl.getEntityType() {
        return DatosVendedor.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> DatosVendedorServiceImpl.getIdType() {
        return Long.class;
    }
    
}
