// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.dilikeo.service.impl;

import com.dilikeo.domain.Venta;
import com.dilikeo.repository.VentaRepository;
import com.dilikeo.service.impl.VentaServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect VentaServiceImpl_Roo_Service_Impl {
    
    declare @type: VentaServiceImpl: @Service;
    
    declare @type: VentaServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private VentaRepository VentaServiceImpl.ventaRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param ventaRepository
     */
    @Autowired
    public VentaServiceImpl.new(VentaRepository ventaRepository) {
        setVentaRepository(ventaRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return VentaRepository
     */
    public VentaRepository VentaServiceImpl.getVentaRepository() {
        return ventaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ventaRepository
     */
    public void VentaServiceImpl.setVentaRepository(VentaRepository ventaRepository) {
        this.ventaRepository = ventaRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param venta
     * @return Map
     */
    public Map<String, List<MessageI18n>> VentaServiceImpl.validate(Venta venta) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param venta
     */
    @Transactional
    public void VentaServiceImpl.delete(Venta venta) {
        getVentaRepository().delete(venta);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Venta> VentaServiceImpl.save(Iterable<Venta> entities) {
        return getVentaRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void VentaServiceImpl.delete(Iterable<Long> ids) {
        List<Venta> toDelete = getVentaRepository().findAll(ids);
        getVentaRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Venta
     */
    @Transactional
    public Venta VentaServiceImpl.save(Venta entity) {
        return getVentaRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Venta
     */
    public Venta VentaServiceImpl.findOne(Long id) {
        return getVentaRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Venta
     */
    public Venta VentaServiceImpl.findOneForUpdate(Long id) {
        return getVentaRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Venta> VentaServiceImpl.findAll(Iterable<Long> ids) {
        return getVentaRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Venta> VentaServiceImpl.findAll() {
        return getVentaRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long VentaServiceImpl.count() {
        return getVentaRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Venta> VentaServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getVentaRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Venta> VentaServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getVentaRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Venta> VentaServiceImpl.getEntityType() {
        return Venta.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> VentaServiceImpl.getIdType() {
        return Long.class;
    }
    
}
